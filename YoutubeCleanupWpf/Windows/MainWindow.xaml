<Window x:Class="YouTubeCleanupWpf.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:YouTubeCleanupWpf.Converters"
        xmlns:domain="clr-namespace:YouTubeCleanupTool.Domain;assembly=YouTubeCleanupTool.Domain"
        xmlns:viewModels="clr-namespace:YouTubeCleanupWpf.ViewModels"
        xmlns:youTubeCleanupWpf="clr-namespace:YouTubeCleanupWpf"
        mc:Ignorable="d"
        Title="YouTube Cleanup" Height="864" Width="1152"
        Loaded="MainWindow_OnLoaded"
        WindowStartupLocation="Manual"
        x:Name="Ui" Icon="/icon_2I6_icon.ico"
        Closing="MainWindow_OnClosing"
        >
    <Window.Resources>
        <converters:NullabilityToVisibilityConverter x:Key="NullabilityToVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Column="0" Row="0">
            <ComboBox ItemsSource="{Binding VideoFilter, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedFilterFromComboBox, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Visibility="{Binding SearchActive, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanToVisibilityConverter}}" IsEnabled="{Binding UpdateHappening, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="36,5,31,5" >
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="domain:IData">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Title}" VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Visibility="{Binding SearchActive, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding UpdateHappening, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Margin="36,5,31,5"/>
            <Button Content="🔎" Command="{Binding SearchCommand, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UpdateHappening, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="26" Margin="5,5,0,5"/>
            <Button Content="↻" Command="{Binding RefreshSelectedPlaylistCommand, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UpdateHappening, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20"/>
        </Grid>
        <Grid Column="1" Row="0">
            <Label Content="{Binding SearchResultCount, UpdateSourceTrigger=PropertyChanged, FallbackValue=search result count}" HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" Width="190" Margin="10,0,0,0"/>
        </Grid>
        <Grid Column="0" Row="1">
            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Videos, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" SelectedItem="{Binding SelectedVideo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" KeyDown="VideoList_OnKeyDown">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="youTubeCleanupWpf:WpfVideoData">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="70" />
                            </Grid.RowDefinitions>
                            <Grid.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ElementName=Ui, Path=DataContext.(viewModels:MainWindowViewModel.OpenVideoCommand), UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding .}" />
                            </Grid.InputBindings>
                            <Image Margin="0,5,0,5" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Source="{Binding Thumbnail}" Width="100" Height="97" />
                            <TextBlock Grid.Row="0" Padding="10, 0, 0, 0" Grid.Column="1" TextWrapping="WrapWithOverflow" VerticalAlignment="Center" Text="{Binding Title}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <Grid Column="1" Row="1" Margin="10,0,0,0">
            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="youTubeCleanupWpf:WpfPlaylistData">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18" />
                            </Grid.RowDefinitions>
                            <Grid.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ElementName=Ui, Path=DataContext.(viewModels:MainWindowViewModel.OpenPlaylistCommand), UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding .}" />
                            </Grid.InputBindings>
                            <CheckBox VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" IsChecked="{Binding VideoInPlaylist}" Command="{Binding ElementName=Ui, Path=DataContext.(viewModels:MainWindowViewModel.CheckedOrUncheckedVideoInPlaylistCommand), UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding .}" />
                            <Label VerticalAlignment="Center" Padding="2,0,0,0" Margin="0" Grid.Column="1" Grid.Row="0" Content="{Binding DisplayTitle, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <Grid Column="2" Row="1" Visibility="{Binding SelectedVideo, Converter={StaticResource NullabilityToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
            <Image Source="{Binding SelectedVideo.Thumbnail, UpdateSourceTrigger=PropertyChanged}" Height="324" VerticalAlignment="Top" Margin="0,0,0,0" HorizontalAlignment="Left" />
            <Label Background="DarkGray" Opacity=".5" FontSize="30" FontWeight="Bold"  Content="" Margin="0,273,0,0" Height="52" VerticalAlignment="Top" />
            <Label FontSize="30" FontWeight="Bold"  Content="{Binding SelectedVideo.Title, UpdateSourceTrigger=PropertyChanged, FallbackValue=Title of video}" Margin="0,273,0,0" Height="52" VerticalAlignment="Top" />
            <TextBox Text="{Binding SelectedVideo.Description, UpdateSourceTrigger=PropertyChanged, FallbackValue=Description of video}" Margin="0,364,0,0" TextWrapping="WrapWithOverflow"/>
            <TextBox Text="{Binding SelectedVideo.ChannelTitle, UpdateSourceTrigger=PropertyChanged, FallbackValue=Channel name}" Margin="0,330,0,0" VerticalAlignment="Top" Height="29" TextWrapping="WrapWithOverflow" >
                <TextBox.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ElementName=Ui, Path=DataContext.(viewModels:MainWindowViewModel.OpenChannelCommand), UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding SelectedVideo}" />
                </TextBox.InputBindings>
            </TextBox>
        </Grid>
        <Grid Grid.Column="2" Grid.Row="0">
            <Button Content="Logs" Command="{Binding ShowLogsCommand, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,60,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="40"/>
            <Button Content="↻" Command="{Binding RefreshDataCommand, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UpdateHappening, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}" Margin="0,0,35,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20"/>
            <Button Content="⚙" Command="{Binding UpdateSettingsCommand, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20"/>
        </Grid>
    </Grid>
</Window>
