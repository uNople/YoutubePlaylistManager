// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouTubeCleanupTool.DataAccess;

namespace YouTubeCleanupTool.DataAccess.Migrations
{
    [DbContext(typeof(YouTubeCleanupToolDbContext))]
    [Migration("20210405095815_More Thumbnails")]
    partial class MoreThumbnails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoDataId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.HasIndex("VideoDataId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.PlaylistData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrivacyStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.PlaylistItemData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddedToPlaylist")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaylistDataId")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrivacyStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoKind")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoPublishedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistDataId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ThumbnailBytes")
                        .HasColumnType("BLOB");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoDataId")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VideoDataId");

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.VideoData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeletedFromYouTube")
                        .HasColumnType("INTEGER");

                    b.Property<string>("License")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecordingDate")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ThumbnailBytes")
                        .HasColumnType("BLOB");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.Category", b =>
                {
                    b.HasOne("YouTubeCleanupTool.Domain.Entities.VideoData", null)
                        .WithMany("Categories")
                        .HasForeignKey("VideoDataId");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.PlaylistItemData", b =>
                {
                    b.HasOne("YouTubeCleanupTool.Domain.Entities.PlaylistData", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistDataId");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.Thumbnail", b =>
                {
                    b.HasOne("YouTubeCleanupTool.Domain.Entities.VideoData", null)
                        .WithMany("Thumbnails")
                        .HasForeignKey("VideoDataId");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.PlaylistData", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("YouTubeCleanupTool.Domain.Entities.VideoData", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Thumbnails");
                });
#pragma warning restore 612, 618
        }
    }
}
